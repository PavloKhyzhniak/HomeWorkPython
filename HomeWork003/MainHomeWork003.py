import random
import sys
import functionsTask1
import functionsTask2
import functionsTask3


def main():
    print(f'{__name__}: начало работы\n')

    print(sys.path)

    Task_ClassWork003()
    while(1):
        Task_HomeWork003()
        choose = int(input("""
\033[0m \033[34;47mВыберите пункт:\033[0m """))
        if choose == 1:
            pass
            functionsTask1.Task_Task1()
            functionsTask1.Run_Task1()

        elif choose == 2:
            pass
            functionsTask2.Task_Task2()
            functionsTask2.Run_Task2()

        elif choose == 3:
            pass
            functionsTask3.Task_Task3()
            functionsTask3.Run_Task3()
    
        elif choose == 4:
            pass
    
        elif choose == 0:
            # from MainHomeWork import main
            # main()
            break


def Task_HomeWork003():
    print('''\t\033[0m \033[34;47mMENU\033[0m
    1 - Task1.
    2 - Task2.
    3 - Task3.
    0 - Exit from Programm
    ''')

def Task_ClassWork003():
    print('''\t\033[0m \033[34;47mТеоретическая часть
\033[0m
•	Строки в Python
•	Доступ к отдельным символам строк
•	Перебор символов строк
•	Основные методы работы со строками 
•	Понятие о работе с файлами в Python – основные операции: открытие, чтение или запись, закрытие файла
•	Запись в текстовый файл, задание кодировки текста
•	Чтение из текстового файла, задание кодировки текста
•	Запись в текстовый файл формата CSV списков сложных объектов (списков, словарей)
•	Чтение из текстового файла формата CSV списков сложных объектов (списков, словарей) 
•	Запись в бинарный файл данных
•	Чтение из бинарного файла данных
•	Модуль shelve для работы с бинарными файлами, как со словарями данных – операции чтения, добавления, изменения и удаления данных 
•	Модуль os для работы с файловой системой – создание, удаление папок, переименование файлов, удаление файлов, проверка файлов на существование


\033[0m \033[34;47mПрактическая часть
\033[0m
\tРазработайте консольное приложение Python в составе главного модуля main.py, модуля utils.py со вспомогательными функциями и модуля app.py в котором разместить функции решения задач.
\tИспользуйте исключения. Реализуйте простое меню для выбора решаемой задачи, пункта в решаемой задачи.
  ''')









# исполняемый код для обеспечения запуска функции main()
# модулю, который стартует, всегда присваивается имя '__main__'
if __name__ == '__main__':
    # from MainHomeWork import main
    main()
# end if
